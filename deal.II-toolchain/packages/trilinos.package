################################################################################
## TRILINOS                                                                   ##
################################################################################

if [ -z "${TRILINOS_MAJOR_VERSION}" ]; then
    TRILINOS_MAJOR_VERSION=AUTO
fi

if [ ${TRILINOS_MAJOR_VERSION} = "AUTO" ]; then
    TRILINOS_MAJOR_VERSION="13"
fi

if [ ${TRILINOS_MAJOR_VERSION} = "DEV" ];then
    # download from github:
    # this is the last "blessed" version we like:
    VERSION=dbf41f3b26b0326a1377f219e6e07eab861d181e
    EXTRACTSTO=trilinos-12.dbf41f

    NAME=Trilinos.git
    PACKING=git
    SOURCE=https://github.com/trilinos/

elif [ ${TRILINOS_MAJOR_VERSION} = "13" ]; then
    VERSION=13-2-0
    CHECKSUM=099680cd3660dba5ec447ddc50a8406c

    SOURCE=https://github.com/trilinos/Trilinos/archive/
    NAME=trilinos-release-${VERSION}
    EXTRACTSTO=Trilinos-trilinos-release-${VERSION}
    PACKING=.tar.gz


elif [ ${TRILINOS_MAJOR_VERSION} = "12" ]; then
    VERSION=12-18-1
    CHECKSUM=9c1d151169949bca6cf203831e4d6aee

    SOURCE=https://github.com/trilinos/Trilinos/archive/
    NAME=trilinos-release-${VERSION}
    EXTRACTSTO=Trilinos-trilinos-release-${VERSION}
    PACKING=.tar.gz

else
    cecho ${BAD} "Unknown Trilinos version ${TRILINOS_MAJOR_VERSION} forced, please use AUTO|12|11."
    exit
fi

BUILDCHAIN=cmake

INSTALL_PATH=${INSTALL_PATH}/${NAME}

################################################################################
# If you have further options for trilinos, please set:
#TRILINOS_CONFOPTS=""

################################################################################
# Please do not change the following options

# Set blas and lapack directories
if [ ! -z "${BLAS_DIR}" ]; then
    cecho ${INFO} "trilinos: configuration with BLAS_DIR=${BLAS_DIR}"
    CONFOPTS="${CONFOPTS} \
      -D BLAS_LIBRARY_DIRS:STRING=${BLAS_DIR}"
fi

if [ ! -z "${LAPACK_DIR}" ]; then
    cecho ${INFO} "trilinos: configuration with LAPACK_DIR=${LAPACK_DIR}"
    CONFOPTS="${CONFOPTS} \
      -D LAPACK_LIBRARY_DIRS:STRING=${LAPACK_DIR}"
fi

if [ ! -z "${SCALAPACK_DIR}" ]; then
    cecho ${INFO} "trilinos: configuration with SCALAPACK_DIR=${SCALAPACK_DIR}"
    CONFOPTS="\
        ${CONFOPTS} \
        -D TPL_ENABLE_SCALAPACK:BOOL=ON \
        -D SCALAPACK_LIBRARY_DIRS=${SCALAPACK_DIR}/lib"
fi

if [ ! -z "${MUMPS_DIR}" ]; then
    cecho ${INFO} "trilinos: configuration with MUMPS_DIR=${MUMPS_DIR}"
    CONFOPTS="${CONFOPTS} \
      -D TPL_ENABLE_MUMPS=ON \
      -D MUMPS_INCLUDE_DIRS:STRING=${MUMPS_DIR}/include \
      -D MUMPS_LIBRARY_DIRS:STRING=${MUMPS_DIR}/lib"
fi

# Set compilers & compiler options
if [ ! -z "${CC}" ]; then
    CONFOPTS="${CONFOPTS} \
      -D CMAKE_C_COMPILER=${CC}"
fi

if [ ! -z "${CXX}" ]; then
    CONFOPTS="${CONFOPTS} \
      -D CMAKE_CXX_COMPILER=${CXX}"
fi

if [ ! -z "${FC}" ]; then
    CONFOPTS="${CONFOPTS} \
      -D CMAKE_Fortran_COMPILER=${FC}"
fi

CONFOPTS="${CONFOPTS} \
  -D CMAKE_CXX_FLAGS:STRING='-fPIC -g -O3' \
  -D CMAKE_C_FLAGS:STRING='-fPIC -g -O3' \
  -D CMAKE_FORTRAN_FLAGS:STRING='-g -O3'"

# Add ParMETIS, if present
if [ ! -z "${PARMETIS_DIR}" ]; then
    cecho ${INFO} "trilinos: configuration with ParMETIS"

    # NOTE: if parmetis v4.0.3 is not found, but installed, add
    #  -D HAVE_PARMETIS_VERSION_4_0_3=ON"

    CONFOPTS="${CONFOPTS} \
      ${TRILINOS_PARMETIS_CONFOPTS} \
      -D TPL_ENABLE_ParMETIS:BOOL=ON \
      -D TPL_ParMETIS_LIBRARIES:FILEPATH='${PARMETIS_DIR}/lib/libparmetis.${LDSUFFIX};${PARMETIS_DIR}/lib/libmetis.${LDSUFFIX}' \
      -D TPL_ParMETIS_INCLUDE_DIRS:PATH=${PARMETIS_DIR}/include"
fi

# Add SuperLU_dist, if present
if [ ! -z "${SUPERLU_DIR}" ]; then
    cecho ${INFO} "trilinos: configuration with SuperLU_dist"

    CONFOPTS="${CONFOPTS} \
      -D TPL_ENABLE_SuperLUDist:BOOL=ON \
      -D TPL_SuperLUDist_LIBRARIES:FILEPATH=${SUPERLU_DIR}/lib/libsuperlu_dist.${LDSUFFIX} \
      -D SuperLUDist_INCLUDE_DIRS:PATH=${SUPERLU_DIR}/include \
      -D HAVE_SUPERLUDIST_LUSTRUCTINIT_2ARG:BOOL=ON \
      -D HAVE_SUPERLUDIST_ENUM_NAMESPACE:BOOL=ON"
fi

#########################################################################
# General Trilinos configuration

# deal.II
CONFOPTS="\
  -D Trilinos_ENABLE_Amesos:BOOL=ON \
  -D Trilinos_ENABLE_Amesos2:BOOL=ON \
  -D Trilinos_ENABLE_AztecOO:BOOL=ON \
  -D Trilinos_ENABLE_Epetra:BOOL=ON \
  -D Trilinos_ENABLE_EpetraExt:BOOL=ON \
  -D Trilinos_ENABLE_Ifpack:BOOL=ON \
  -D Trilinos_ENABLE_ML:BOOL=ON \
  -D Trilinos_ENABLE_ROL:BOOL=ON \
  -D Trilinos_ENABLE_Sacado:BOOL=ON \
  -D Trilinos_ENABLE_Tpetra:BOOL=ON \
  ${CONFOPTS}"

# FroSch
CONFOPTS="\
    -D CMAKE_BUILD_TYPE:STRING=$TYPE \
    -D CMAKE_INSTALL_PREFIX:STRING=$INSTALL_DIR \
    -D CMAKE_C_FLAGS:STRING="-DFROSCH_TIMER_DETAILS=2" \
    -D CMAKE_CXX_FLAGS:STRING="-DFROSCH_TIMER_DETAILS=2" \
    -D CMAKE_CXX_STANDARD:STRING=14 \
    -D MPI_EXEC_MAX_NUMPROCS:STRING=8 \
    -D Trilinos_ENABLE_Fortran:BOOL=ON \
    -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF \
    -D Trilinos_ASSERT_MISSING_PACKAGES:BOOL=ON \
    -D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF \
    -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF \
    -D Trilinos_ENABLE_EXPLICIT_INSTANTIATION:BOOL=ON \
    -D Trilinos_VERBOSE_CONFIGURE:BOOL=OFF \
    -D Trilinos_ENABLE_Belos:BOOL=ON \
    -D Kokkos_ENABLE_SERIAL:BOOL=ON \
    -D Kokkos_ENABLE_TESTS:BOOL=ON \
    -D Trilinos_ENABLE_MueLu:BOOL=OFF \
    -D Trilinos_ENABLE_ShyLU_DD:BOOL=ON \
    -D ShyLU_DDBDDC_ENABLE_TESTS:BOOL=OFF \
    -D ShyLU_DD_ENABLE_TESTS:BOOL=ON \
    -D Trilinos_ENABLE_Stratimikos:BOOL=ON \
    -D Tpetra_ENABLE_DEPRECATED_CODE:BOOL=ON \
    -D Trilinos_ENABLE_Thyra:BOOL=ON \
    -D Xpetra_ENABLE_DEPRECATED_CODE:BOOL=ON \
    -D TPL_ENABLE_MPI:BOOL=ON \
    -D TPL_ENABLE_Boost:BOOL=OFF \
    -D TPL_ENABLE_Netcdf:BOOL=OFF \
    -D TPL_ENABLE_UMFPACK:BOOL=ON \
    -D UMFPACK_INCLUDE_DIRS:FILEPATH=/usr/include/suitesparse \
    -D UMFPACK_LIBRARY_DIRS:FILEPATH=/usr/lib/x86_64-linux-gnu \
    -D TPL_ENABLE_X11:BOOL=OFF \
  ${CONFOPTS}"

# finally append user options:
CONFOPTS="${CONFOPTS} \
  ${TRILINOS_CONFOPTS}"

package_specific_register () {
    export TRILINOS_DIR=${INSTALL_PATH}
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${NAME}
    rm -f $CONFIG_FILE
    echo "
export TRILINOS_DIR=${INSTALL_PATH}
" >> $CONFIG_FILE
}
