MAJOR=3.21
MINOR=4
VERSION=${MAJOR}.${MINOR}
USE_VERSION=false

# We try to determine if we have a linux platform to use tarball install
# instead of configure/make due to possible missing autotools on some
# HPC clusters. We need to do this, because tarball install on MacOS or
# other platforms is not maintainable by the candi authors.

if [ -z "${PLATFORM_OSTYPE}" ]; then
    cecho ${WARN} "WARNING: could not determine your Operating System Type (assuming linux)"
    PLATFORM_OSTYPE=linux
fi

if [ ${PLATFORM_OSTYPE} == "linux" ]; then
    # tarball install
    NAME=cmake-${VERSION}-linux-x86_64
    PACKING=.tar.gz
    # CHECKSUM=8f3dd8952ae9d532ae340c7d0f4cd1d7 # 3.16.3
    # CHECKSUM=20bc14b37c4d51d4f7d143646c8fadc0 # 3.19.8
    CHECKSUM=c29ccd212b817ee1091e82c083aa5852
    BUILDCHAIN=ignore
else
    # configure/make/install
    NAME=cmake-${VERSION}
    PACKING=.tar.gz
    # CHECKSUM=9e6fa59704d3a52812e279996b5b01c7 # 3.16.3
    # CHECKSUM=eb8e262d4f24ce34439aaa6fac80ad0a # 3.19.8

    if builtin command -v cmake > /dev/null; then
        # configure/make with cmake (older or newer version already installed)    
        BUILDCHAIN=cmake
    else
        # configure/make with autotools
        BUILDCHAIN=autotools
    fi
fi

SOURCE=https://cmake.org/files/v${MAJOR}/
INSTALL_PATH=${INSTALL_PATH}/${NAME}

if [ ${BUILDCHAIN} == "ignore" ]; then
    package_specific_install () {
        cp -rf ${UNPACK_PATH}/${EXTRACTSTO} ${INSTALL_PATH}
    }
fi

package_specific_register () {
    export PATH=${INSTALL_PATH}/bin:${PATH}
    export CMAKE_ROOT=${INSTALL_PATH}/share/${MAJOR}
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${NAME}
    rm -f $CONFIG_FILE
    echo "
export PATH=${INSTALL_PATH}/bin:\${PATH}
export CMAKE_ROOT=${INSTALL_PATH}/share/${MAJOR}
" >> $CONFIG_FILE
}
